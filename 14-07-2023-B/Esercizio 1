******************************TRACCIA********************************
Si scriva una funzione:
int cambia_segno_e_massima_somma(Mat* m);
che data in input una matrice di interi m NxN, con N dispari, prima inverte il segno di tutti gli elementi la cui somma tra indice di riga
e indice di colonna Ã¨ dispari, e successivamente ritorna il massimo tra la somma degli elementi dei quadranti della matrice. Definiamo quadranti di una matrice,
le 4 porzioni della matrice che sono racchiuse tra le sue 2 diagonali (elementi della diagonale esclusi).

**************************IMPLEMENTAZIONE****************************
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include "aux.h"

//questa funzione cambia di segno 
Mat* cambia_segno(Mat*m){
  Mat*ris=mat_alloc(m->rows,m->cols);
  for(int i=0;i<m->rows;i++){
    for(int j=0;j<m->cols;j++){
      if((i+j)%2!=0) ris->mat[i][j]=-(m->mat[i][j]);
      else ris->mat[i][j]=m->mat[i][j];
    }
  }
  return ris;
}

int cambia_segno_e_massima_somma(Mat* m) {
  double somma=0;
  double somma_max=-100;
  Mat*ris=cambia_segno(m);

  for(int i=0;i<ris->rows;i++){  //quadrante nord
    for(int j=0;j<ris->cols;j++){
      if(i<j && i+j<m->rows-1) somma+=ris->mat[i][j];
      }
    }
  if(somma>somma_max) somma_max=somma;
  somma=0;

  for(int k=0;k<ris->rows;k++){  //quadrante ovest
    for(int h=0;h<ris->cols;h++){
      if(k>h && k+h<m->rows-1) somma+=ris->mat[k][h];
    }
  }
  if(somma>somma_max) somma_max=somma;
  somma=0;

  for(int a=0;a<ris->rows;a++){  //quadrante sud
    for(int b=0;b<ris->cols;b++){
      if(a>b && a+b>m->rows-1) somma+=ris->mat[a][b];
    }
  }
  if(somma>somma_max) somma_max=somma;
  somma=0;

  for(int y=0;y<ris->rows;y++){  //quadrante est
    for(int u=0;u<ris->cols;u++){
      if(y<u && y+u>m->rows-1) somma+=ris->mat[y][u];
    }
  }
  if(somma>somma_max) somma_max=somma;
  return somma_max;
}
